openapi: 3.0.3
info:
  title: Pizza Order Api
  version: "1.0"
paths:
  /pizza/orders:
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          $ref: '#/components/responses/CorsResponse'
    post:
      tags:
        - "Pizza Order Api"
      summary: Create a new order
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        description: Pizza order content
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PizzaOrderDto'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PizzaOrderCreatedDto'
        "400":
          description: Bad request
        "403":
          description: Forbidden
        "500":
          description: Internal server error
  /pizza/upload/menu:
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
        - CORS
      responses:
        '200':
          $ref: '#/components/responses/CorsResponse'
    post:
      tags:
        - "Pizza Menu Api"
      summary: Upload pizza menu as a JSON file
      description: Upload pizza menu as a JSON file
      parameters:
        - $ref: '#/components/parameters/Authorization'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                upload:
                  type: string
                  format: binary
                  description: The JSON file to upload
              required:
                - upload
      responses:
        "201":
          description: Created
        "400":
          description: Bad request
        "403":
          description: Forbidden
        "500":
          description: Internal server error
components:
  schemas:
    PizzaOrderDto:
      type: object
      properties:
        orders:
          type: array
          minItems: 1
          maxItems: 32
          items:
            $ref: '#/components/schemas/PizzaOrderItemDto'
        customer:
          $ref: '#/components/schemas/PizzaOrderCustomerDto'
      required:
        - orders
        - customer
    PizzaOrderItemDto:
      type: object
      properties:
        name:
          type: string
          description: Name of the pizza being ordered.
          maxLength: 128
          example: "Margherita Pizza"
        quantity:
          type: integer
          description: Number of pizza being ordered.
          example: 3
          minimum: 1
          maximum: 12
      required:
        - name
        - quantity
    PizzaOrderCustomerDto:
      type: object
      properties:
        name:
          type: string
          description: Name of the customer.
          maxLength: 64
          example: "John Doe"
        email:
          type: string
          description: Email address of the customer.
          maxLength: 128
          pattern: ^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$
          example: "john.doe@customer.com"
        phoneNumber:
          type: string
          description: Phone number of the customer, including country code.
          maxLength: 16
          pattern: '^\+?\d{1,3}?[-.\s]?\(?\d{1,4}?\)?[-.\s]?\d{1,4}[-.\s]?\d{1,9}$'
          example: "+4366488888888"
        specialRequest:
          type: string
          description: Special requests from the customer regarding their order.
          maxLength: 1024
          example: "I would like extra cheese and a thinner crust. I'm quite hungry, so please deliver it as soon as possible. I usually give extra tips."
      required:
        - name
        - phoneNumber
    PizzaOrderCreatedDto:
      type: object
      properties:
        orderId:
          type: string
          description: Order unique id
          format: uuid
  parameters:
    Authorization:
      name: Authorization
      in: header
      required: true
      description: JWT Authorizing token to allow access to the endpoint
      schema:
        type: string
  responses:
    CorsResponse:
      description: Successful response for CORS method